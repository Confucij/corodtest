#############################################################################
# Makefile for building: fotoproj
# Generated by qmake (2.01a) (Qt 4.8.0) on: Mon Feb 6 20:20:41 2012
# Project:  fotoproj.pro
# Template: app
# Command: /usr/bin/qmake QMAKE_CC=/usr/bin/gcc QMAKE_CXX=/usr/bin/g++ QMAKE_CFLAGS=-g3\ -gdwarf-2 QMAKE_CXXFLAGS=-g3\ -gdwarf-2 -o Makefile fotoproj.pro
#############################################################################

####### Compiler, tools and options

CC            = /usr/bin/gcc
CXX           = /usr/bin/g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -g3 -gdwarf-2 -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -g3 -gdwarf-2 -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include/QtXml -I/usr/include -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib64 -lGLU -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		window.cpp \
		map.cpp \
		new_dlg.cpp \
		projecthandle.cpp \
		glwidget.cpp \
		graph_widget.cpp \
		func.cpp \
		lib_dialog.cpp \
		cut_widget.cpp moc_window.cpp \
		moc_glwidget.cpp \
		moc_new_dlg.cpp \
		moc_projecthandle.cpp \
		moc_graph_widget.cpp \
		moc_lib_dialog.cpp \
		moc_cut_widget.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		window.o \
		map.o \
		new_dlg.o \
		projecthandle.o \
		glwidget.o \
		graph_widget.o \
		func.o \
		lib_dialog.o \
		cut_widget.o \
		moc_window.o \
		moc_glwidget.o \
		moc_new_dlg.o \
		moc_projecthandle.o \
		moc_graph_widget.o \
		moc_lib_dialog.o \
		moc_cut_widget.o \
		qrc_resources.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		fotoproj.pro
QMAKE_TARGET  = fotoproj
DESTDIR       = 
TARGET        = fotoproj

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_window.h ui_newp_dlg.h ui_lib_dialog.h ui_cut_widget.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: fotoproj.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) QMAKE_CC=/usr/bin/gcc QMAKE_CXX=/usr/bin/g++ QMAKE_CFLAGS=-g3\ -gdwarf-2 QMAKE_CXXFLAGS=-g3\ -gdwarf-2 -o Makefile fotoproj.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/opengl.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) QMAKE_CC=/usr/bin/gcc QMAKE_CXX=/usr/bin/g++ QMAKE_CFLAGS=-g3\ -gdwarf-2 QMAKE_CXXFLAGS=-g3\ -gdwarf-2 -o Makefile fotoproj.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/fotoproj1.0.0 || $(MKDIR) .tmp/fotoproj1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/fotoproj1.0.0/ && $(COPY_FILE) --parents window.h glwidget.h map.h new_dlg.h projecthandle.h type_and_const.h graph_widget.h func.h lib_dialog.h cut_widget.h .tmp/fotoproj1.0.0/ && $(COPY_FILE) --parents resources.qrc .tmp/fotoproj1.0.0/ && $(COPY_FILE) --parents main.cpp window.cpp map.cpp new_dlg.cpp projecthandle.cpp glwidget.cpp graph_widget.cpp func.cpp lib_dialog.cpp cut_widget.cpp .tmp/fotoproj1.0.0/ && $(COPY_FILE) --parents window.ui newp_dlg.ui lib_dialog.ui cut_widget.ui .tmp/fotoproj1.0.0/ && (cd `dirname .tmp/fotoproj1.0.0` && $(TAR) fotoproj1.0.0.tar fotoproj1.0.0 && $(COMPRESS) fotoproj1.0.0.tar) && $(MOVE) `dirname .tmp/fotoproj1.0.0`/fotoproj1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/fotoproj1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_window.cpp moc_glwidget.cpp moc_new_dlg.cpp moc_projecthandle.cpp moc_graph_widget.cpp moc_lib_dialog.cpp moc_cut_widget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_window.cpp moc_glwidget.cpp moc_new_dlg.cpp moc_projecthandle.cpp moc_graph_widget.cpp moc_lib_dialog.cpp moc_cut_widget.cpp
moc_window.cpp: glwidget.h \
		map.h \
		type_and_const.h \
		ui_window.h \
		new_dlg.h \
		ui_newp_dlg.h \
		lib_dialog.h \
		func.h \
		projecthandle.h \
		window.h
	/usr/bin/moc $(DEFINES) $(INCPATH) window.h -o moc_window.cpp

moc_glwidget.cpp: map.h \
		type_and_const.h \
		glwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) glwidget.h -o moc_glwidget.cpp

moc_new_dlg.cpp: ui_newp_dlg.h \
		lib_dialog.h \
		func.h \
		new_dlg.h
	/usr/bin/moc $(DEFINES) $(INCPATH) new_dlg.h -o moc_new_dlg.cpp

moc_projecthandle.cpp: type_and_const.h \
		lib_dialog.h \
		func.h \
		new_dlg.h \
		ui_newp_dlg.h \
		projecthandle.h
	/usr/bin/moc $(DEFINES) $(INCPATH) projecthandle.h -o moc_projecthandle.cpp

moc_graph_widget.cpp: lib_dialog.h \
		func.h \
		graph_widget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) graph_widget.h -o moc_graph_widget.cpp

moc_lib_dialog.cpp: func.h \
		lib_dialog.h
	/usr/bin/moc $(DEFINES) $(INCPATH) lib_dialog.h -o moc_lib_dialog.cpp

moc_cut_widget.cpp: type_and_const.h \
		cut_widget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) cut_widget.h -o moc_cut_widget.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources.qrc \
		images/new.png \
		images/save.png \
		images/open.png
	/usr/bin/rcc -name resources resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_window.h ui_newp_dlg.h ui_lib_dialog.h ui_cut_widget.h
compiler_uic_clean:
	-$(DEL_FILE) ui_window.h ui_newp_dlg.h ui_lib_dialog.h ui_cut_widget.h
ui_window.h: window.ui \
		glwidget.h \
		map.h \
		type_and_const.h
	/usr/bin/uic window.ui -o ui_window.h

ui_newp_dlg.h: newp_dlg.ui
	/usr/bin/uic newp_dlg.ui -o ui_newp_dlg.h

ui_lib_dialog.h: lib_dialog.ui \
		graph_widget.h \
		lib_dialog.h \
		func.h
	/usr/bin/uic lib_dialog.ui -o ui_lib_dialog.h

ui_cut_widget.h: cut_widget.ui
	/usr/bin/uic cut_widget.ui -o ui_cut_widget.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp window.h \
		glwidget.h \
		map.h \
		type_and_const.h \
		ui_window.h \
		new_dlg.h \
		ui_newp_dlg.h \
		lib_dialog.h \
		func.h \
		projecthandle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

window.o: window.cpp window.h \
		glwidget.h \
		map.h \
		type_and_const.h \
		ui_window.h \
		new_dlg.h \
		ui_newp_dlg.h \
		lib_dialog.h \
		func.h \
		projecthandle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o window.o window.cpp

map.o: map.cpp map.h \
		type_and_const.h \
		window.h \
		glwidget.h \
		ui_window.h \
		new_dlg.h \
		ui_newp_dlg.h \
		lib_dialog.h \
		func.h \
		projecthandle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o map.o map.cpp

new_dlg.o: new_dlg.cpp new_dlg.h \
		ui_newp_dlg.h \
		lib_dialog.h \
		func.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o new_dlg.o new_dlg.cpp

projecthandle.o: projecthandle.cpp projecthandle.h \
		type_and_const.h \
		lib_dialog.h \
		func.h \
		new_dlg.h \
		ui_newp_dlg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o projecthandle.o projecthandle.cpp

glwidget.o: glwidget.cpp glwidget.h \
		map.h \
		type_and_const.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glwidget.o glwidget.cpp

graph_widget.o: graph_widget.cpp graph_widget.h \
		lib_dialog.h \
		func.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graph_widget.o graph_widget.cpp

func.o: func.cpp func.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o func.o func.cpp

lib_dialog.o: lib_dialog.cpp lib_dialog.h \
		func.h \
		ui_lib_dialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lib_dialog.o lib_dialog.cpp

cut_widget.o: cut_widget.cpp cut_widget.h \
		type_and_const.h \
		ui_cut_widget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cut_widget.o cut_widget.cpp

moc_window.o: moc_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_window.o moc_window.cpp

moc_glwidget.o: moc_glwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_glwidget.o moc_glwidget.cpp

moc_new_dlg.o: moc_new_dlg.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_new_dlg.o moc_new_dlg.cpp

moc_projecthandle.o: moc_projecthandle.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_projecthandle.o moc_projecthandle.cpp

moc_graph_widget.o: moc_graph_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_graph_widget.o moc_graph_widget.cpp

moc_lib_dialog.o: moc_lib_dialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lib_dialog.o moc_lib_dialog.cpp

moc_cut_widget.o: moc_cut_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cut_widget.o moc_cut_widget.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

